
Loading MNIST Data...

Loading Training Data...

Loading Testing Data...

Preparing Classifier Training and Validation Data...

KNN Classifier with n_neighbors = 5, algorithm = auto, n_jobs = 10

Pickling the Classifier for Future Use...

Calculating Accuracy of trained Classifier...

Making Predictions on Validation Data...

Calculating Accuracy of Predictions...

Creating Confusion Matrix...

KNN Trained Classifier Confidence:  0.9713333333333334

Predicted Values:  [4 5 5 ... 5 5 7]

Accuracy of Classifier on Validation Image Data:  0.9713333333333334

Confusion Matrix: 
 [[628   1   1   0   0   1   1   0   0   0]
 [  0 687   1   0   0   0   0   2   0   0]
 [  0  12 584   1   1   0   0   4   0   1]
 [  1   3   4 572   0  10   1   1   3   1]
 [  1   5   0   0 570   0   2   0   0   9]
 [  2   3   0   4   2 524   5   1   0   2]
 [  3   2   1   0   1   2 554   0   0   0]
 [  0   9   2   1   2   0   0 600   1   9]
 [  0   7   2   8   2  10   2   1 552   5]
 [  3   1   1   2   2   0   0   6   1 557]]

Making Predictions on Test Input Images...

Calculating Accuracy of Trained Classifier on Test Data... 

 Creating Confusion Matrix for Test Data...

Predicted Labels for Test Images:  [7 2 1 ... 4 5 6]

Accuracy of Classifier on Test Images:  0.9683

Confusion Matrix for Test Data: 
 [[ 974    1    1    0    0    1    2    1    0    0]
 [   0 1133    2    0    0    0    0    0    0    0]
 [  11   10  988    2    0    0    2   16    3    0]
 [   0    3    3  978    1   12    0    6    3    4]
 [   3    6    0    0  945    0    4    1    1   22]
 [   6    0    0    9    2  864    4    2    2    3]
 [   5    4    0    0    3    2  944    0    0    0]
 [   0   23    4    0    3    0    0  988    0   10]
 [   7    3    4   17    6   15    5    5  908    4]
 [   4    6    3    9    7    3    1   12    3  961]]
